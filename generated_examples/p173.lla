let rec d (foo : char) a c = delete (main[new unit])
and f b (f : unit) e = for g = true downto 11 do match "foo" with
  (((+.2.56))) -> 42.0
| (-.42.0) -> 24
end
 done
and a f bar e = e (for foo = false to () do delete false done)
and f main = delete ((B (begin () end) (new float)))
and g bar a = dim main

type d = Tree | B
 and g = Nil | Cons

let a = begin let a a = () in (e[25,42.0]) end
and bar g f bar f : (unit) = (- (for foo = "foo" to () do 27 done))
and b = if '\'' then (+. ()) else (17)
and b (c : char ref) (foo : float) : (int) = delete (dim c)

