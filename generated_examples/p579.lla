let rec b : (char) = (dim 1 d +. (new float))
and a = -. (while begin () end do let c foo foo d d = 37
and f (bar : f) e e = '\n'
and foo bar a = ()
and g a a d (main : e) = true
and e e c bar g = 42.0 in true done)
and c b = if '7' then let rec e main main c e = "bar"
and d d f g f = ()
and a a a a b = 2 in 17

let c (main : unit) e g = match ! false with
  d -> new bool ref
end


let a foo main = delete (match for a = 14 downto 22 do 17 done with
  (+.42.0) -> new float
| Tree -> for main = () to 19 do "foo" done
end
)
and d = A (if () then (let c : float -> float ref = () in 42.0) else bar "Route66")

