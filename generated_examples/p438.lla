let d a = foo (for c = false to 14 do e[(),"Name:\t\"DouglasAdams\"\nValue:\t42\n"] done) (let d f = "bar"
and c (f : int) (d : (e)) (d : unit ref ref) : char = () in (for b = '\n' downto 2.56 do () done))
and b bar = dim 1 d
and c (b : unit) b c = (let rec f (bar : bool) a bar : a = 28 in (if 42.0 then '\''))

type main = D | Tree

let e main b a (g : unit) = (match 23 with
  ('7') -> true
| Empty -> ()
end
 / (delete 30))
and bar g bar bar c = begin let foo (foo : g ref) g f c = true
and mutable f["Route66"] : array [*,*] of (char) in (! '\'') end
and mutable f : array of foo
and g d b e d = new unit
and mutable c[(let foo b c = "bar"
and b (g : g) foo f a = 21
and f d bar d (c : array [*,*] of (int) ref ref ref) = true
and f (d : int -> bool) e (bar : array [*] of bar ref) main = 31 in (match () with
  Tree '7' 4 -> ()
| 'a' -> 36
| C '\n' Cons '\'' -> ()
end
))]

