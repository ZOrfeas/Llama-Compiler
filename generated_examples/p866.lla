let main (main : array [*] of (bool ref)) d e g = while let c (e : float ref) main = false in 2.56 do foo[42,18] done
and mutable f[while delete true do while () do 3.14 done done,let f (c : int) = ()
and foo foo foo (foo : array of float ref -> int) = 5 in (new g)]
and foo b = - ((Nil 16 true () && (let foo bar g : bool = 3.14
and main bar d (c : float) = 34
and c g : char = false
and c c (a : array of unit ref -> char) = true in 'a')))

type bar = C of unit | Empty of char | A

type g = Cons of float ref foo a int

