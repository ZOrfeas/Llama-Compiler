type main = D | Tree | Nil

let rec bar e = let d = 12
and main : ((int) -> float ref) = false in (Empty '7')
and g (a : char) : array of char -> int -> main ref ref = f[for c = "bar" downto () do (31 && 0) done,while delete "Name:\t\"DouglasAdams\"\nValue:\t42\n" do new char done]
and d g bar c d = let b e c a = true in (while () do 42.0 done)
and c main g g = let b main main d = ()
and mutable e[false]
and mutable f : foo
and f g f e d : int ref -> g ref = () in (begin "bar" end)

let d d (main : int ref) g = -. (let foo d foo f = 29
and bar bar : char = ()
and foo foo = 'a'
and foo foo = ()
and d foo d : c -> (float) = '\'' in ((2.56)))
and a = for b = false to '7' do for g = false downto "bar" do 20 done done

