let main foo a f g = while f["Name:\t\"DouglasAdams\"\nValue:\t42\n",0.0] do c[3.14] done
and c d c = let main f : b = 16
and a (main : unit ref) bar main foo : array of float -> bool = false
and main (foo : float) = ()
and c bar f foo = 15
and bar main d (d : float) g : char -> (bool) = () in (for bar = true downto "foo" do 34 done)
and main e g main f = c[new int -> unit]
and foo (f : unit) = not (for d = 33 downto "bar" do (() / '7') done)

let mutable d[match if false then "bar" else "Name:\t\"DouglasAdams\"\nValue:\t42\n" with
  '7' -> while () do () done
| 36 -> ("foo")
| '7' -> match false with
  (+30) -> "bar"
| Tree -> ()
end

end
] : g
and c = match d () with
  a -> delete 22
end

and foo main : e = if true then B ()

