let d a (foo : unit) (g : c) d = - (dim e)
and mutable d[b (- (match true with
  (false) -> ()
end
)) (let rec c = 33
and foo = '\''
and c foo b bar = "foo"
and d = 32
and c main = true in (! '\n')) (bar[not (begin () end),if 3 then 3 else true])] : array [*,*] of float ref
and foo main c = dim c
and a d bar = delete (new int)
and foo main = delete ((delete '7' > (if 21 then '\n')))

let a a = ((dim a || ((false))))

