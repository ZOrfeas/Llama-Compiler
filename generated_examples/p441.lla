let foo (f : array of int -> (float -> char) -> array of (char -> unit ref) ref ref) = match - () with
  true -> dim 1 main
| Tree false ((+.2.56)) ((-20)) -> delete 3.14
| 'a' -> while true do "Name:\t\"DouglasAdams\"\nValue:\t42\n" done
end

and e d = dim 2 e
and bar g a main f = new e
and b a g = dim main
and f (g : int) (foo : unit) = delete (Empty (begin dim 1 bar end))

type bar = A of array [*] of bool ref array [*] of char e ref int

let foo main = (if "bar" then (delete ()) else e['\'',true])
and f : bool = begin delete (foo (("foo" >= ())) (let e d a = true
and c b (bar : b) = 3.14
and mutable e[2.56,41] : bool
and foo a d foo main = () in "Route66")) end
and f g (f : array of array of bool ref -> char ref) d : char = c[let e (g : unit) (e : (float)) a main = ()
and a (f : array [*] of unit) e : d = ()
and b (bar : float) a g : unit = '\''
and a (main : bool) (main : float) g foo = 3 in (delete ()),begin (if 3.14 then 20 else 12) end]
and bar f main bar = match +. 4 with
  '\'' -> +. "Route66"
end


