type g = Tree of int | A of unit bool array of array [*] of char -> unit

let main (e : bar) foo main = dim 2 g
and f main (a : unit) e a = match - () with
  (-.2.56) -> - ()
| Cons '7' 34 -> a[false]
end

and c f c (g : bool) f : char = ((match '7' with
  '\n' -> 'a'
| (C) -> 30
end
))
and f = while let d main g d d : b ref = 3.14 in 0.0 do Empty 3 42.0 done

type main = Nil | A of unit float array of d -> int | Empty | C

