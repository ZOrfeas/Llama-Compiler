type e = Tree | B of int unit

type e = Empty | D | B of b main
 and bar = Empty | Empty | Empty of (char) bool | Tree

let g e bar g = (new unit < ((false > false)))
and bar e : unit = let e c b (e : char) = false
and g d c a = true in (let a (main : a) (main : array of int) = 2.56
and main c c = ()
and a (b : g -> int) = 42.0
and f c a = "bar" in 28)
and main b = new c
and main c foo main g = while A 0.0 () do not true done

