type bar = Cons of unit foo f | Cons | C
 and d = C

let b e (e : unit) d b = new unit
and b = f[main[! (! 42.0)],let rec d = '\n'
and b d c = 11
and g g = 42.0
and c d e (main : b) = true in (C "Route66" true "Name:\t\"DouglasAdams\"\nValue:\t42\n")]
and mutable b[(d["Route66"] mod ((true))),let f (b : array [*,*] of int -> unit) bar main a = "Route66"
and b (g : array [*,*] of float) a bar c = false
and g d c : char = "Route66"
and mutable g
and d = "foo" in (begin false end)] : b

type g = Cons of unit | Nil | D | Tree

