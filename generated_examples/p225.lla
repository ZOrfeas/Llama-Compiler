let foo d bar a = (dim bar >= (("Route66")))
and mutable bar[dim e] : unit -> int
and e = not (delete (let main e (main : float ref) foo = ()
and foo (bar : (d)) : e = false
and g = ()
and main bar (c : array of int) bar = 2.56 in "Name:\t\"DouglasAdams\"\nValue:\t42\n"))
and a foo g g g : unit = (new char)

let bar = C ((while 17 do 'a' done == ((true >= 'a')))) (+. (delete (Cons () 40 42.0))) ((while 0.0 do false done /. (("bar" ++ "Route66"))))
and c (c : float) e a = if "Route66" then let main main d : ((int)) = '\n'
and main e = 36
and c foo (a : float) (g : float) f = "bar"
and e b g foo = false in 3.14
and main a b = dim c
and g e = let g foo b g (c : b) = true in (let e a = '7'
and mutable c['\n',"Name:\t\"DouglasAdams\"\nValue:\t42\n"]
and main main = ()
and c a (e : unit -> float) b e = 'a' in "Name:\t\"DouglasAdams\"\nValue:\t42\n")

type main = Tree

