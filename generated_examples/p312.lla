let c f : main = new bool
and f = b[f[let g e d : a = ()
and f c b = ()
and c = ()
and d main main = "bar" in 42.0],not (let d b : float ref ref -> g = ()
and foo : unit = false
and e (bar : int) b foo f = "Route66" in 2.56)]

type bar = A | Tree | B

type c = D | C of int
 and main = Tree | Cons

