let e e bar main main = begin for b = "bar" downto 0.0 do for g = 26 to 0.0 do false done done end
and mutable main[if () then (+ 2.56) else foo['7',()]]
and main d f d f = if true then while "foo" do 2.56 done

type g = A of array of (array of array [*] of int) -> c float | C | Tree

type g = Cons | Cons of array [*,*] of array [*,*] of array of float ref array of float bool | Empty

