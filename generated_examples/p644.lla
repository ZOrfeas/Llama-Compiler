type e = Cons | D | A | Empty

let mutable e[while (()) do delete 3.14 done]
and foo f (foo : c -> int) g c = dim f
and c = (Empty "foo" ++ ((42.0)))
and bar = if true then new bool

let rec main d f e b = main (dim a) (delete (delete (let e g (bar : char) e foo = 18
and a a main = '\'' in 16))) (+. (delete (if 3.14 then () else "foo")))
and b b foo : char = while (false) do a[false,()] done
and bar e main = delete (not ((false * 20)))

