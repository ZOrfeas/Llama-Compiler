let e d foo main foo = if "foo" then +. false
and a a = dim 2 b
and c = let c c main = "bar" in (dim bar)
and e a : int = if '7' then Tree ()
and foo f (foo : bool -> bool -> char) e : unit ref -> char = match while '\'' do 3.14 done with
  (+3) -> if 'a' then 42.0
| D 'a' (-39) (+39) -> begin 42.0 end
end


let rec mutable a[D (+. (! (begin '\'' end))) ((((() +. 3.14))))]
and foo g g g (e : unit) = (match "foo" with
  Tree (+32) -> "Name:\t\"DouglasAdams\"\nValue:\t42\n"
| true -> 3
end
 <= (dim 2 g))

let rec b (d : float -> array of unit) = (while new char do A "bar" false 18 done)
and bar e : float = match let a c = false in 1 with
  '\n' -> match 2.56 with
  true -> ()
| (-.2.56) -> ()
| '\'' -> '7'
end

| true -> match '\'' with
  'a' -> "Name:\t\"DouglasAdams\"\nValue:\t42\n"
| 2.56 -> false
end

| true -> let rec b main b main g = '\''
and foo g g c = '7'
and e f e main (a : unit) : char = ()
and main d foo (foo : (bool)) bar : float -> unit = ()
and g (a : e) (f : bool ref) bar main = 17 in 0
end

and e f : unit = new unit
and g = for g = () downto "Route66" do let d (foo : array of char) a : int = "Route66"
and bar a b c b : array of (float) = ()
and foo = "Name:\t\"DouglasAdams\"\nValue:\t42\n" in '\'' done
and g = let rec c (main : array [*] of c) f : char = ()
and mutable c[true] in (for bar = '\n' downto () do '7' done)

