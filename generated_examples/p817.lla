let foo g bar a e : char ref = let rec main = 16
and a b b = 'a'
and bar (g : int) (bar : float) (c : char) : (array of int -> char -> int ref) = true
and f = "Route66" in (new (b))
and f e (c : (bool)) : unit = match for main = 30 downto () do 5 done with
  '7' -> (true)
| Tree true '7' -> ("foo" +. true)
| false -> let c main (g : bool) : int = 36
and f d (f : float) c = ()
and b (d : array of int) bar a = 42 in '7'
end


let c bar = match +. "Route66" with
  (+13) -> while 4 do true done
| main -> ('7' - 42.0)
end


