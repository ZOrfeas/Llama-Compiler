let d (c : array [*,*] of array of array of unit ref) = begin while match 2.56 with
  (false) -> '\''
end
 do let rec mutable e
and foo e bar g c = ()
and a main f (main : char) (c : (unit -> int)) = "Route66" in 42 done end
and f : bool = let f g = "Name:\t\"DouglasAdams\"\nValue:\t42\n"
and main : b -> b -> int = 2.56
and main f = 0.0
and d c = ()
and bar a e c bar : b = true in (('7'))
and main main main bar = D (bar[let b e e = false
and c f e = 23
and f (main : g) d = false in "Name:\t\"DouglasAdams\"\nValue:\t42\n"]) (let a b c d a = 42
and mutable foo[42.0] in (dim 1 b))

type main = Tree | C | Nil
 and b = A | D of char (float) | A | C

let d main bar (e : unit) = begin D (begin match '\'' with
  42.0 -> 0.0
| 42.0 -> '7'
end
 end) (new array of char) end
and c main (b : bool ref -> bool) g : array [*,*] of d ref = dim g

