let e foo d = (new g -> char -> char -> array of ((float)) -> float ref)

type f = B | D of (int) -> bool -> bar float unit bool | Tree | A of float

let a : unit ref = A ((match true with
  true -> ()
| Tree e -> ()
end
 <> (new a))) (dim 1 a) (! ((let rec c a main = '\n' in 36)))

